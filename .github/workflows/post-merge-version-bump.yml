name: post-merge-version-bump

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  BASE_BRANCH: main
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  version-bump:
    runs-on: ubuntu-latest

    steps:
      - name: Initialize configuration
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BASE_BRANCH }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      # node_modules がキャッシュされてなければ Node.js をセットアップ
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # node_modules がキャッシュされてなければ依存関係をインストール
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: npm ci

      - name: Get current version
        run: |
          CURRENT_VERSION=$(jq -r '.version' package.json)
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "Current version: $CURRENT_VERSION"

      - name: Generate tag with current version
        run: |
          git tag -a "v${{ env.CURRENT_VERSION }}" -m "v${{ env.CURRENT_VERSION }}"
          git push origin "v${{ env.CURRENT_VERSION }}"

      - name: Create release note
        run: |
          gh release create "v${{ env.CURRENT_VERSION }}" --generate-notes

      - name: Checkout main branch again
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BASE_BRANCH }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump up patch version
        run: npm version patch --no-git-tag-version

      - name: Get next version
        run: |
          NEXT_VERSION=$(jq -r '.version' package.json)
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
          echo "NEXT_HOTFIX_BRANCH=hotfix/v${NEXT_VERSION}" >> $GITHUB_ENV
          echo "Next version: $NEXT_VERSION"

      - name: Create next patch version branch
        run: |
          git checkout -b ${{ env.NEXT_HOTFIX_BRANCH }}

      - name: Update package version
        run: |
          git add package*.json
          git commit -m "[chore] bump version to v${{ env.NEXT_VERSION }}" --no-verify
          git push origin ${{ env.NEXT_HOTFIX_BRANCH }} --no-verify

      - name: Create pull request
        run: |
          TITLE="Bump version to v${{ env.NEXT_VERSION }}"
          TODAY=$(date +'%Y/%m/%d')
          BODY="## Version Update

          This PR updates the version from v${{ env.CURRENT_VERSION }} to v${{ env.NEXT_VERSION }}.

          **Changes:**
          - Bumped patch version after merge to main
          - Created hotfix branch: \`${{ env.NEXT_HOTFIX_BRANCH }}\`

          **Date:** ${TODAY}

          This PR was automatically created by GitHub Actions after merging to main branch."

          gh pr create \
            --base "${{ env.BASE_BRANCH }}" \
            --head "${{ env.NEXT_HOTFIX_BRANCH }}" \
            --title "$TITLE" \
            --body "$BODY" \
            --draft
